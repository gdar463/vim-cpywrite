*cpywrite.txt*
              _                                                _ __
       _   __(_)___ ___        _________  __  ___      _______(_) /____
      | | / / / __ `__ \______/ ___/ __ \/ / / / | /| / / ___/ / __/ _ \
      | |/ / / / / / / /_____/ /__/ /_/ / /_/ /| |/ |/ / /  / / /_/  __/
      |___/_/_/ /_/ /_/      \___/ .___/\__, / |__/|__/_/_/  /_/\__/\___/
                                /_/    /____/

Maintainer: Robert Di Pardo <dipardo.r@gmail.com>
URL:        https://github.com/rdipardo/vim-cpywrite
License:    MIT

==============================================================================
CONTENTS                                                 *cpywrite-contents*

    Introduction ................................... |cpywrite-introduction|
    Requirements ................................... |cpywrite-requirements|
    Attributes ....................................... |cpywrite-attributes|
    Options ............................................. |cpywrite-options|
    Commands ........................................... |cpywrite-commands|
    Mappings ............................................ |cpywrite-keymaps|

=============================================================================
INTRODUCTION                                         *cpywrite-introduction*

Pass a license identifier to the |:CPYwrite| command and it will insert the
standard header, if available, at the top of the current buffer.

When |g:cpywrite#verbatim_mode| is off, licenses with no standard header will
be acknowledged below your author line. Turn on |g:cpywrite#verbatim_mode| to
use the full license text instead.

This plugin learns your name and email by invoking `git`; it falls back to
your OS user and host names.

=============================================================================
REQUIREMENTS                                         *cpywrite-requirements*

* Vim compiled with any one of the |+python|, |+python3|, |+python/dyn| or
  |+python3/dyn| options

* Neovim with the `pynvim` module in your $PYTHONPATH:

    https://github.com/neovim/pynvim

  Enter |:help| |provider-python| in your command prompt for more information.

* The `requests` module in your $PYTHONPATH:

    https://pypi.org/project/requests

=============================================================================
ATTRIBUTES                                             *cpywrite-attributes*

                                                        *g:cpywrite#version*
        `string`

The current version number of this plugin.

=============================================================================
OPTIONS                                                   *cpywrite-options*

                                                *g:cpywrite#default_license*
        `string` (default: 'Apache-2.0')

Set this to the SPDX identifier of your favourite license. Press <tab> after
the |:CPYwriteDefaultLicense| or |:CPYwrite| command for suggestions.

                                                  *g:cpywrite#verbatim_mode*
        `number` (default: 0)

When set to a non-zero value, the full license text will be requested, whether
or not a standard header exists. You should only choose this when the license
is no longer than 3-4 paragraphs (e.g. Unlicense, MIT, BSD 1- 2- 3-Clause,
etc.)

When set to 0, only standard headers are requested. Licenses with no standard
header will be briefly mentioned below your copyright line.

                                                  *g:cpywrite#hide_filename*
        `number` (default: 0)

When set to a non-zero value, hides the name of the current buffer from the
license header in all modes. Otherwise, the buffer's name will appear on the
first line.

=============================================================================
COMMANDS                                                 *cpywrite-commands*

                                                                 *:CPYwrite*
        :CPYwrite [{spdx_short_name}]

Optionally takes the name of an SPDX license identifier (without quotes).
Use <tab> for name completion.

When called with no argument, this command behaves exactly like
|<Plug>(cpywrite)|.

                                                   *:CPYwriteDefaultLicense*
        :CPYwriteDefaultLicense [{spdx_short_name}]

Sets |g:cpywrite#default_license| to the given SPDX license identifier (without
quotes) and prints the updated value. Use <tab> for name completion.

Simply prints |g:cpywrite#default_license| when called with no argument.

                                                       *:CPYwriteToggleMode*
        :CPYwriteToggleMode

Toggles the state of the |g:cpywrite#verbatim_mode| option and prints a
description of the current state:
>
    0 == "standard header/brief"
    1 == "verbatim"
<

                                                   *:CPYwriteToggleFilename*
        :CPYwriteToggleFilename

Toggles the state of the |g:cpywrite#hide_filename| option and prints a
description of the current state:
>
    0 == "showing"
    1 == "hidden"
<
                                                          *<Plug>(cpywrite)*
Quick action command for fetching the default license assigned to
|g:cpywrite#default_license|.

=============================================================================
KEYMAPS                                                   *cpywrite-keymaps*

                                                                        *LH*
        {Normal}LH

Default mapping of the |<Plug>(cpywrite)| command.

=============================================================================
vim:tw=78:noet:ft=help:norl:
