After(Clear buffers);
  %bd!

Execute(Test that plugin was loaded);
  call vader#log('===== Pre-test environment check =====')
  Assert exists('g:loaded_cpywrite')

Execute(Set default license to the GPL-3.0+);
  call vader#log('===== Setting default license =====')
  let g:cpywrite_default_license = 'GPL-3.0-or-later'

Then(Assert that default license was set);
  AssertEqual 'GPL-3.0-or-later', g:cpywrite_default_license

" Tc #1
Execute(Prepend the default license header to a shell script);
  new! default_header
  b default_header
  norm LH

Then(Shell script header quotes the GPL-3.0+);
  AssertEqual '#!/usr/bin/env bash', getline(1)
  AssertEqual 1, len(getline(2)), 'Allow no trailing spaces'
  AssertEqual '# default_header', getline(3)
  AssertEqual '# modify it under the terms of the GNU General Public License', getline(8)
  AssertEqual '# 3 of the License, or (at your option) any later version.', getline(10)

" Tc #2
Execute(Prepend a standard license header to a shell script);
  new! brief_header
  b brief_header
  CPYwrite GFDL-1.1-only

Then(Shell script header quotes the GFDL-1.1-only);
  AssertEqual '#!/usr/bin/env bash', getline(1)
  AssertEqual 1, len(getline(2)), 'Allow no trailing spaces'
  AssertEqual '# brief_header', getline(3)
  AssertEqual '# Permission is granted to copy, distribute and/or modify this', getline(7)
  AssertEqual '# in the section entitled "GNU Free Documentation License".', getline(12)
  AssertEqual 1, len(getline(13)), 'Allow no trailing spaces'

Execute(Prepend the default license header to a Python file);
  new! default_header.py
  b default_header.py
  CPYwrite

Then(Python file header quotes the GPL-3.0+);
  AssertEqual '# -*- coding: utf-8 -*-', getline(2)
  AssertEqual 1, len(getline(4)), 'Allow no trailing spaces'
  AssertEqual '# default_header.py', getline(5)
  AssertEqual '# modify it under the terms of the GNU General Public License', getline(10)
  AssertEqual '# 3 of the License, or (at your option) any later version.', getline(12)

" Tc #4
Execute(Prepend a standard header to a Python file);
  new! standard.py
  b standard.py
  CPYwrite AFL-1.1

Then(Python file header quotes the AFL-1.1);
  AssertEqual '# -*- coding: utf-8 -*-', getline(2)
  AssertEqual 1, len(getline(4)), 'Allow no trailing spaces'
  AssertEqual '# standard.py', getline(5)
  AssertEqual '# Licensed under the Academic Free License version 1.1.', getline(9)

" Tc #5
Execute(Prepend the default license header to a Ruby file);
  new! default_header.rb
  b default_header.rb
  silent exe "norm \<Plug>(cpywrite)"

Then(Ruby file header quotes the GPL-3.0+);
  AssertEqual '# frozen_string_literal: true', getline(1)
  AssertEqual 0, len(getline(2)), 'One blank line after frozen_string_literal directive'
  AssertEqual '# default_header.rb', getline(4)
  AssertEqual '# modify it under the terms of the GNU General Public License', getline(9)
  AssertEqual '# 3 of the License, or (at your option) any later version.', getline(11)

" Tc #6
Execute(Prepend a header-less license to a Ruby file);
  new! brief_header.rb
  b brief_header.rb
  CPYwrite MIT

Then(Ruby file header has brief license mention);
  AssertEqual '# frozen_string_literal: true', getline(1)
  AssertEqual 0, len(getline(2)), 'One blank line after frozen_string_literal directive'
  AssertEqual '# brief_header.rb', getline(4)
  AssertEqual '# Licensed under the terms of the MIT License', getline(8)

" Tc #7
Execute(Prepend the default license header to a PHP file);
  new! default_header.php
  b default_header.php
  CPYwrite

Then(PHP file quotes the GPL-3.0+);
  AssertEqual '<?php', getline(1)
  AssertEqual ' * default_header.php', getline(3)
  AssertEqual 2, len(getline(4)), 'Allow no trailing spaces'
  AssertEqual ' * modify it under the terms of the GNU General Public License', getline(8)
  AssertEqual ' * 3 of the License, or (at your option) any later version.', getline(10)
  AssertEqual '?>', getline(22), 'Ensure closing PHP tag'

" Tc #8
Execute(Prepend a header-less license to a PHP file);
  new! brief_header.phtml
  b brief_header.phtml
  CPYwrite Zend-2.0

Then(PHP file has brief license mention);
  AssertEqual '<?php', getline(1)
  AssertEqual ' * brief_header.phtml', getline(3)
  AssertEqual 2, len(getline(4)), 'Allow no trailing spaces'
  AssertEqual ' * Licensed under the terms of the Zend-2.0 License', getline(7)
  AssertEqual '?>', getline(10), 'Ensure closing PHP tag'

" Tc #9
Execute(Prepend the default license header to an SQL script);
  new! default_header.sql
  b default_header.sql
  silent exe "norm \<Plug>(cpywrite)"

Then(SQL script quotes the GPL-3.0+);
  AssertEqual '-- default_header.sql', getline(2)
  AssertEqual 2, len(getline(3)), 'Allow no trailing spaces'
  AssertEqual '-- modify it under the terms of the GNU General Public License', getline(7)
  AssertEqual '-- 3 of the License, or (at your option) any later version.', getline(9)
  AssertEqual '--', getline(19)

" Tc #10
Execute(Prepend a header-less license to an SQL script);
  new! brief.sql
  b brief.sql
  CPYwrite bzip2-1.0.5

Then(SQL script has brief license mention);
  AssertEqual '-- brief.sql', getline(2)
  AssertEqual 2, len(getline(3)), 'Allow no trailing spaces'
  AssertEqual '-- Licensed under the terms of the bzip2-1.0.5 License', getline(6)
  AssertEqual 2, len(getline(7)), 'Allow no trailing spaces'

" Tc #11
Execute(Prepend the default license header to a Vim script);
  new! standard.vim
  b standard.vim
  norm LH

Then(Vim script quotes the GPL-3.0+);
  AssertEqual '"" standard.vim', getline(2)
  AssertEqual 2, len(getline(3)), 'Allow no trailing spaces'
  AssertEqual '"" modify it under the terms of the GNU General Public License', getline(7)
  AssertEqual '"" 3 of the License, or (at your option) any later version.', getline(9)
  AssertEqual '""', getline(19)

" Tc #12
Execute(Prepend a header-less license to a .vimrc file);
  new! .vimrc
  b .vimrc
  CPYwrite Vim

Then(.vimrc has brief license mention);
  AssertEqual '"" .vimrc', getline(2)
  AssertEqual 2, len(getline(3)), 'Allow no trailing spaces'
  AssertEqual '"" Licensed under the terms of the Vim License', getline(6)
  AssertEqual 2, len(getline(7)), 'Allow no trailing spaces'
