After(Clear buffers);
  %bd!

Execute(Test that plugin was loaded);
  call vader#log('===== Pre-test environment check =====')
  Assert exists('g:loaded_cpywrite')

Execute(Set default license to the GPL-3.0+);
  call vader#log('===== Setting default license =====')
  let g:cpywrite#default_license = 'GPL-3.0-or-later'

Then(Assert that default license was set);
  AssertEqual 'GPL-3.0-or-later', g:cpywrite#default_license

Execute(Use :CPYwriteToggleFilename to hide buffer name);
  call vader#log('===== Calling :CPYwriteToggleFilename =====')
  CPYwriteToggleFilename

Then(Assert that file name is now hidden);
  AssertEqual 1, g:cpywrite#hide_filename

" Tc #1
Execute(Prepend the default license header to a shell script);
  new! default_header
  b default_header
  norm LH

Then(Shell script header quotes the GPL-3.0+);
  AssertEqual '#!/usr/bin/env bash', getline(1)
  AssertEqual 1, len(getline(2)), 'Allow no trailing spaces'
  AssertEqual '# modify it under the terms of the GNU General Public License', getline(6)
  AssertEqual '# 3 of the License, or (at your option) any later version.', getline(8)

" Tc #2
Execute(Prepend a standard header to a Perl script);
  new! standard.pl
  b standard.pl
  CPYwrite ECL-2.0

Then(Perl script header quotes the ECL-2.0);
  AssertEqual '#!/usr/bin/env perl', getline(1)
  AssertEqual 1, len(getline(2)), 'Allow no trailing spaces'
  AssertEqual '# Educational Community License, Version 2.0 (the "License"); you may', getline(4)
  AssertEqual '# permissions and limitations under the License.', getline(14)

Execute(Use :CPYwriteToggleFilename to show buffer name);
  call vader#log('===== Calling :CPYwriteToggleFilename =====')
  CPYwriteToggleFilename

Then(Assert that file name is now showing);
  AssertEqual 0, g:cpywrite#hide_filename

" Tc #3
Execute(Prepend a standard license header to a shell script);
  new! brief_header
  b brief_header
  CPYwrite GFDL-1.1-only

Then(Shell script header quotes the GFDL-1.1-only);
  AssertEqual '#!/usr/bin/env bash', getline(1)
  AssertEqual 1, len(getline(2)), 'Allow no trailing spaces'
  AssertEqual '# brief_header', getline(3)
  AssertEqual '# Permission is granted to copy, distribute and/or modify this', getline(7)
  AssertEqual '# in the section entitled "GNU Free Documentation License".', getline(12)
  AssertEqual 1, len(getline(13)), 'Allow no trailing spaces'

Execute(Prepend a standard header to a Batch script);
  new! standard.cmd
  b standard.cmd
  norm i@echo off
  CPYwrite MPL-2.0

Then(Batch script quotes the MPL-2.0);
  AssertEqual '@echo off', getline(1)
  AssertEqual 2, len(getline(2)), 'Allow no trailing spaces'
  AssertEqual ':: standard.cmd', getline(3)
  AssertEqual ':: This Source Code Form is subject to the terms of the Mozilla Public License,', getline(7)
  AssertEqual ':: obtain one at http://mozilla.org/MPL/2.0/.', getline(9)

" Tc #4
Execute(Prepend the default license header to a Python file);
  new! default_header.py
  b default_header.py
  CPYwrite

Then(Python file header quotes the GPL-3.0+);
  AssertEqual '# -*- coding: utf-8 -*-', getline(2)
  AssertEqual 1, len(getline(4)), 'Allow no trailing spaces'
  AssertEqual '# default_header.py', getline(5)
  AssertEqual '# modify it under the terms of the GNU General Public License', getline(10)
  AssertEqual '# 3 of the License, or (at your option) any later version.', getline(12)

" Tc #5
Execute(Prepend a standard header to a Python file);
  new! standard.py
  b standard.py
  CPYwrite AFL-1.1

Then(Python file header quotes the AFL-1.1);
  AssertEqual '# -*- coding: utf-8 -*-', getline(2)
  AssertEqual 1, len(getline(4)), 'Allow no trailing spaces'
  AssertEqual '# standard.py', getline(5)
  AssertEqual '# Licensed under the Academic Free License version 1.1.', getline(9)

" Tc #6
Execute(Prepend the default license header to a Ruby file);
  new! default_header.rb
  b default_header.rb
  silent exe "norm \<Plug>(cpywrite)"

Then(Ruby file header quotes the GPL-3.0+);
  AssertEqual '# frozen_string_literal: true', getline(1)
  AssertEqual 0, len(getline(2)), 'One blank line after frozen_string_literal directive'
  AssertEqual '# default_header.rb', getline(4)
  AssertEqual '# modify it under the terms of the GNU General Public License', getline(9)
  AssertEqual '# 3 of the License, or (at your option) any later version.', getline(11)

" Tc #7
Execute(Prepend a header-less license to a Ruby file);
  new! brief_header.rb
  b brief_header.rb
  CPYwrite MIT

Then(Ruby file header has brief license mention);
  AssertEqual '# frozen_string_literal: true', getline(1)
  AssertEqual 0, len(getline(2)), 'One blank line after frozen_string_literal directive'
  AssertEqual '# brief_header.rb', getline(4)
  AssertEqual '# Distributed under the terms of the MIT License.', getline(8)

" Tc #8
Execute(Prepend the default license header to a PHP file);
  new! default_header.php
  b default_header.php
  norm i<? phpinfo();?>
  CPYwrite

Then(PHP file quotes the GPL-3.0+);
  AssertEqual '<? phpinfo();?>', getline(1), 'Preserve PHP markup'
  AssertEqual '<?php', getline(2)
  AssertEqual ' * default_header.php', getline(4)
  AssertEqual 2, len(getline(5)), 'Allow no trailing spaces'
  AssertEqual ' * modify it under the terms of the GNU General Public License', getline(9)
  AssertEqual ' * 3 of the License, or (at your option) any later version.', getline(11)
  AssertEqual '?>', getline(23), 'Ensure closing PHP tag'

" Tc #9
Execute(Prepend a header-less license to a PHP file);
  new! brief_header.phtml
  b brief_header.phtml
  CPYwrite Zend-2.0

Then(PHP file has brief license mention);
  AssertEqual '<?php', getline(1)
  AssertEqual ' * brief_header.phtml', getline(3)
  AssertEqual 2, len(getline(4)), 'Allow no trailing spaces'
  AssertEqual ' * Distributed under the terms of the Zend License Version 2.0.', getline(7)
  AssertEqual '?>', getline(10), 'Ensure closing PHP tag'

" Tc #10
Execute(Prepend the default license header to an SQL script);
  new! default_header.sql
  b default_header.sql
  silent exe "norm \<Plug>(cpywrite)"

Then(SQL script quotes the GPL-3.0+);
  AssertEqual '-- default_header.sql', getline(2)
  AssertEqual 2, len(getline(3)), 'Allow no trailing spaces'
  AssertEqual '-- modify it under the terms of the GNU General Public License', getline(7)
  AssertEqual '-- 3 of the License, or (at your option) any later version.', getline(9)
  AssertEqual '--', getline(19)

Execute(Hide buffer name from license header);
  call vader#log('===== Calling :CPYwriteToggleFilename =====')
  CPYwriteToggleFilename

Then(Assert that file name is now hidden);
  AssertEqual 1, g:cpywrite#hide_filename

" Tc #11
Execute(Prepend a header-less license to an R source file);
  new! script.R
  b script.R
  CPYwrite bzip2-1.0.6

Then(R source file has brief license mention);
  AssertEqual '#', getline(1)
  AssertEqual 1, len(getline(3)), 'Allow no trailing spaces'
  AssertEqual '# Distributed under the terms of the bzip2 and libbzip2 License Version 1.0.6.', getline(4)
  AssertEqual 1, len(getline(5)), 'Allow no trailing spaces'

Execute(Use :CPYwriteToggleFilename to start showing buffer name);
  call vader#log('===== Restoring file name display =====')
  CPYwriteToggleFilename

Then(Assert that file name is now showing);
  AssertEqual 0, g:cpywrite#hide_filename

" Tc #12
Execute(Prepend the default license header to a Vim script);
  new! standard.ideavim
  b standard.ideavim
  CPYwrite Apache-2.0

Then(Vim script quotes the Apache-2.0);
  AssertEqual '"" standard.ideavim', getline(2)
  AssertEqual 2, len(getline(3)), 'Allow no trailing spaces'
  AssertEqual '"" Licensed under the Apache License, Version 2.0 (the ''License'');', getline(6)
  AssertEqual '"" distributed under the License is distributed on an ''AS IS'' BASIS,', getline(13)
  AssertEqual '""', getline(17)

" Tc #13
Execute(Prepend a header-less license to a .vimrc file);
  new! .vimrc
  b .vimrc
  CPYwrite Vim

Then(.vimrc has brief license mention);
  AssertEqual '"" .vimrc', getline(2)
  AssertEqual 2, len(getline(3)), 'Allow no trailing spaces'
  AssertEqual '"" Distributed under the terms of the Vim License.', getline(6)
  AssertEqual 2, len(getline(7)), 'Allow no trailing spaces'

" Tc #14
Execute(Prepend a header-less license to a .exrc file);
  new! .exrc
  b .exrc
  CPYwrite XFree86-1.1

Then(.exrc has brief license mention);
  AssertEqual '"" .exrc', getline(2)
  AssertEqual 2, len(getline(3)), 'Allow no trailing spaces'
  AssertEqual '"" Distributed under the terms of the XFree86 License Version 1.1.', getline(6)
  AssertEqual 2, len(getline(7)), 'Allow no trailing spaces'

Execute(Prepend a standard license header to a Julia script);
  new! standard.jl
  b standard.jl
  CPYwrite BitTorrent-1.1

Then(Julia script header quotes the BitTorrent version 1.1 license);
  AssertEqual '# standard.jl', getline(2)
  AssertEqual 1, len(getline(3)), 'Allow no trailing spaces'
  AssertEqual '# Version 1.1 (the License). You may not copy or use this file, in either', getline(7)
  AssertEqual '#', getline(14)
